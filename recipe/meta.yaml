{% set version = "1.51.16" %}

{% set PYTHON = PYTHON | default("$PYTHON") %}

package:
  name: starlite
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/s/starlite/starlite-{{ version }}.tar.gz
  # the SHA256 gets updated by the bot
  sha256: c249d3ac71262ffe4ceebea3b87da46f43558d73af55fb95c2dc548d37d69e51

build:
  # the build number gets reset by the bot
  number: 1
  noarch: python
  script:
    - {{ PYTHON }} {{ RECIPE_DIR }}/update_recipe.py --check
    - {{ PYTHON }} -m pip install . -vv --no-deps --ignore-installed --no-build-isolation
  entry_points:
    - starlite = starlite:__main__

requirements:
  host:
    - pip
    - poetry-core >=1.0.0
    - python {{ python_min }}
    # for `update_recipe.py` preflight
    - jinja2
    - tomli
  run:
    - python >={{ python_min }}
    - anyio >=3,<4
    - fast-query-parsers
    - httpx >=0.22
    - importlib-metadata
    - mako >=1.2.4
    - msgspec >=0.11.0
    - multidict >=6.0.2
    - pydantic <2
    - pydantic-openapi-schema >=1.5.0
    - pydantic_factories
    - pyyaml
    - typing_extensions
test:
  imports:
    - starlite
  commands:
    - pip check
  requires:
    - pip

outputs:
  - name: starlite

  - name: starlite-with-brotli
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - brotli
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        # TODO: import test for brotli
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with brotli)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-cli
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - click
        - jsbeautifier
        - rich >=13.0.0
        - uvicorn
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.cli.main
      commands:
        - pip check
        - starlite --help
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with cli)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-cryptography
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - cryptography
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.middleware.session.cookie_backend
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with cryptography)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-jinja
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - jinja2 >=3.1.2
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.contrib.jinja
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with jinja)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-jwt
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - cryptography
        - python-jose
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.contrib.jwt.jwt_token
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with jwt)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-memcached
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - aiomcache
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.cache.memcached_cache_backend
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with memcached)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-opentelemetry
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - opentelemetry-instrumentation-asgi
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.contrib.opentelemetry.utils
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with opentelemetry)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-picologging
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - picologging
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.logging.picologging
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with picologging)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-redis
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - hiredis >=1.0.0
        - redis-py
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.cache.redis_cache_backend
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with redis)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-standard
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - click
        - jinja2 >=3.1.2
        - jsbeautifier
        - picologging
        - rich >=13.0.0
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        # TODO: import test for standard
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with standard)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-structlog
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - structlog
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        # TODO: import test for structlog
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with structlog)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-tortoise-orm
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - tortoise-orm >=0.17.0,<0.20.0
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        - starlite.plugins.tortoise_orm
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with tortoise-orm)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-full
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - aiomcache
        - brotli
        - click
        - cryptography
        - hiredis >=1.0.0
        - jinja2 >=3.1.2
        - opentelemetry-instrumentation-asgi
        - picologging
        - python-jose
        - redis-py
        - rich >=13.0.0
        - structlog
        - tortoise-orm >=0.17.0,<0.20.0
    test:
      requires:
        - pip
        - python {{ python_min }}
      imports:
        - starlite
        # TODO: import test for full
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with full)
      license: MIT
      license_file: LICENSE


about:
  home: https://litestar.dev
  dev_url: https://github.com/litestar-org/litestar
  doc_url: https://docs.litestar.dev
  summary: Light-weight and flexible ASGI API Framework
  license: MIT
  license_file: LICENSE

extra:
  feedstock-name: starlite
  recipe-maintainers:
    - thewchan
    - bollwyvl
